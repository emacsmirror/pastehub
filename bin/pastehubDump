#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
#
# pastehubDump - PasteHub's dump utility for UNIX client.
#  
#   Copyright (c) 2009-2011  Kiyoka Nishiyama  <kiyoka@sumibi.org>
#   
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions
#   are met:
#   
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#  
#   2. Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
#  
#   3. Neither the name of the authors nor the names of its contributors
#      may be used to endorse or promote products derived from this
#      software without specific prior written permission.
#  
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#   TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#  
#
require 'pastehub'

def dumpDb( username, command, key )
  config = PasteHub::Config.instance
  config.loadClient

  # open local store
  store = PasteHub::LocalStore.new( username, true )
  case command
  when "list"
    localList = store.getList()
    if key and key.match( /^[0-9]+$/ )
      localList = localList.take( key.to_i )
    end
    localList.each { |x|
      puts x
    }

  when "slist"
    serverList = store.getServerList()
    serverList.each { |x|
      puts x
    }

  when "top"
    pair = store.top()
    print pair[1]  if pair[1]

  when "latest"
    arr = store.latest()
    puts 'server=' + arr[0]
    puts 'local =' + arr[1]

  when "get"
    print store.getValue( key )
  end

  store.close()
end

def main
  username  = PasteHub.loadUsername
  if not username
    STDERR.puts "clientDump: setup problem. Please setup pastehub application."
    exit 1
  end

  if 0 == ARGV.length
    STDERR.puts "clientDump [command] [arg]"
    STDERR.puts "  1) clientDump  list"
    STDERR.puts "  2) clientDump slist"
    STDERR.puts "  3) clientDump get  key"
    STDERR.puts "  4) clientDump top"
    STDERR.puts "  5) clientDump latest"
    exit 1
  end

  command = ARGV[0].downcase
  case command
  when "list"
    dumpDb( username, command, ARGV[1] )
  when "slist"
    dumpDb( username, command, "" )
  when "top"
    dumpDb( username, command, "" )
  when "latest"
    dumpDb( username, command, "" )
  when "get"
    if 2 > ARGV.length
      STDERR.puts "Error: please spacify key."
      exit 1
    end
    dumpDb( username, command, ARGV[1] )
  else
    STDERR.puts "unknown command [#{command}]"
  end
end

main
